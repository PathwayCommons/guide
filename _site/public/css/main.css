/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}template,[hidden]{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:0.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace, monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:bold}button,input{overflow:visible}button,select{text-transform:none}button,html [type="button"],[type="reset"],[type="submit"]{-webkit-appearance:button}button::-moz-focus-inner,[type="button"]::-moz-focus-inner,[type="reset"]::-moz-focus-inner,[type="submit"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type="button"]:-moz-focusring,[type="reset"]:-moz-focusring,[type="submit"]:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid #c0c0c0;margin:0 2px;padding:0.35em 0.625em 0.75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type="checkbox"],[type="radio"]{box-sizing:border-box;padding:0}[type="number"]::-webkit-inner-spin-button,[type="number"]::-webkit-outer-spin-button{height:auto}[type="search"]{-webkit-appearance:textfield;outline-offset:-2px}[type="search"]::-webkit-search-cancel-button,[type="search"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:0.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}*,*:before,*:after{box-sizing:border-box}html{font-size:10px;-webkit-tap-highlight-color:transparent}body{font-family:"Lato", "Helvetica Neue", Helvetica, Arial, sans-serif;font-size:16px;line-height:1.4;color:#333;background-color:#fff}a{color:#1976D2;text-decoration:none;transition:color 0.3s}a:hover,a:focus{color:#56ADF5}h1,h2,h3,h4,h5,h6{font-weight:300}h1,h2,h3{margin:20px 0}h4,h5,h6{margin:10px 0}h1{font-size:38px}h2{font-size:30px}h3{font-size:24px}h4{font-size:20px}h5{font-size:16px}h6{font-size:14px}p{margin:0 0 15px 0}.container{margin-right:auto;margin-left:auto;padding-left:15px;padding-right:15px}.container:before,.container:after{content:" ";display:table}.container:after{clear:both}@media (min-width: 768px){.container{width:750px}}@media (min-width: 992px){.container{width:970px}}@media (min-width: 1200px){.container{width:1170px}}.demo{margin:40px 0;padding-bottom:20px;border-bottom:1px solid #ddd}pre{display:block;padding:20px;margin:0 0 20px 0;overflow:auto;font-family:'Cutive Mono', monospace;font-size:14px;word-break:break-all;word-wrap:break-word;background-color:#eee;border:1px solid #bbb}.progress-tracker{display:flex;margin:40px auto;padding:0;list-style:none}.progress-step{display:block;position:relative;flex:1 1 auto;margin:0;padding:0;min-width:28px}.progress-step:last-child{flex-grow:0}.progress-step:not(:last-child)::after{content:'';display:block;position:absolute;z-index:10;top:12px;bottom:12px;right:-14px;width:100%;height:4px;transition:background-color 0.3s}.progress-marker{display:flex;justify-content:center;align-items:center;position:relative;z-index:20;width:28px;height:28px;padding-bottom:2px;color:#fff;font-weight:bold;border:2px solid transparent;border-radius:50%;transition:background-color, border-color;transition-duration:0.3s}.progress-text{display:block;padding:14px 9.33333px;overflow:hidden;text-overflow:ellipsis}.progress-title{margin-top:0}.progress-step .progress-marker{color:#fff;background-color:#b6b6b6}.progress-step::after{background-color:#b6b6b6}.progress-step .progress-text,.progress-step .progress-step>a .progress-text{color:#333333}.progress-step.is-active .progress-marker{background-color:#2196F3}.progress-step.is-complete .progress-marker{background-color:#1976D2}.progress-step.is-complete::after{background-color:#868686}.progress-step:hover .progress-marker{background-color:#56ADF5}.progress-tracker--center .progress-step{text-align:center}.progress-tracker--center .progress-step:last-child{flex-grow:1}.progress-tracker--center .progress-step::after{right:-50%}.progress-tracker--center .progress-marker{margin-left:auto;margin-right:auto}.progress-tracker--right .progress-step{text-align:right}.progress-tracker--right .progress-step:last-child{flex-grow:1}.progress-tracker--right .progress-step::after{right:calc(-100% + 14px)}.progress-tracker--right .progress-marker{margin-left:auto}.progress-tracker--border{padding:5px;border:2px solid #868686;border-radius:38px}.progress-tracker--spaced .progress-step::after{width:calc(100% - 48px);margin-right:24px}.progress-tracker--text .progress-step:last-child{flex-grow:1}.progress-tracker--text-top .progress-step::after{top:auto}.progress-tracker--vertical{flex-direction:column}.progress-tracker--vertical .progress-step::after{right:auto;top:14px;left:12px;width:4px;height:100%}.progress-tracker--vertical .progress-marker{position:absolute;left:0}.progress-tracker--vertical .progress-text{padding-top:7px;padding-left:42px}.progress-tracker--vertical .progress-step:not(:last-child) .progress-text{padding-bottom:42px}.anim-ripple .progress-marker::before{content:"";display:block;width:100%;height:100%;position:absolute;top:50%;left:50%;z-index:30;background:rgba(0,0,0,0.3);border-radius:50%;opacity:0;transform:translate(-50%, -50%) scale(1);transition:transform, opacity;transition-duration:0.3s;transition-timing-function:ease-out}.anim-ripple .progress-marker:active::before,.anim-ripple .progress-step>a:active .progress-marker::before{opacity:1;transform:translate(-50%, -50%) scale(0);transition-duration:0s}.anim-ripple-large .progress-marker::before{content:"";display:block;width:100%;height:100%;position:absolute;top:50%;left:50%;z-index:30;background:rgba(0,0,0,0.3);border-radius:50%;opacity:0;transform:translate(-50%, -50%) scale(1);transition:transform, opacity;transition-duration:0.3s;transition-timing-function:ease-out;width:200%;height:200%}.anim-ripple-large .progress-marker:active::before,.anim-ripple-large .progress-step>a:active .progress-marker::before{opacity:1;transform:translate(-50%, -50%) scale(0);transition-duration:0s}.anim-ripple-double .progress-marker::before,.anim-ripple-double .progress-marker::after{content:"";display:block;width:100%;height:100%;position:absolute;top:50%;left:50%;z-index:30;background:rgba(0,0,0,0.3);border-radius:50%;opacity:0;transform:translate(-50%, -50%) scale(1);transition:transform, opacity;transition-duration:0.3s;transition-timing-function:ease-out;background:none;border:3px solid rgba(0,0,0,0.3)}.anim-ripple-double .progress-marker::after{transition-delay:0.15s}.anim-ripple-double .progress-marker:active::before,.anim-ripple-double .progress-marker:active::after,.anim-ripple-double .progress-step>a:active .progress-marker::before,.anim-ripple-double .progress-step>a:active .progress-marker::after{opacity:1;transform:translate(-50%, -50%) scale(0);transition-duration:0s}.anim-path .progress-step::after{background-image:linear-gradient(to right, #b6b6b6 50%, #868686 50%);background-size:200% 100%;background-position:0% 100%;transition:background-position 0.3s ease-out}.anim-path .progress-step.is-complete::after{background-position:-100% 100%}*{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}html,body{margin:0;padding:0}html{font-family:"Helvetica Neue", Helvetica, Arial, sans-serif;font-size:16px;line-height:1.5}@media (min-width: 38em){html{font-size:20px}}body{color:#515151;background-color:#fff;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%}a{color:#268bd2;text-decoration:none}a strong{color:inherit}a:hover,a:focus{text-decoration:underline}h1,h2,h3,h4,h5,h6{margin-bottom:.5rem;font-weight:bold;line-height:1.25;color:#313131;text-rendering:optimizeLegibility}h1{font-size:2rem}h2{margin-top:1rem;font-size:1.5rem}h3{margin-top:1.5rem;font-size:1.25rem}h4,h5,h6{margin-top:1rem;font-size:1rem}p{margin-top:0;margin-bottom:1rem}strong{color:#303030}ul,ol,dl{margin-top:0;margin-bottom:1rem}dt{font-weight:bold}dd{margin-bottom:.5rem}hr{position:relative;margin:1.5rem 0;border:0;border-top:1px solid #eee;border-bottom:1px solid #fff}abbr{font-size:85%;font-weight:bold;color:#555;text-transform:uppercase}abbr[title]{cursor:help;border-bottom:1px dotted #e5e5e5}code,pre{font-family:Menlo, Monaco, "Courier New", monospace}code{padding:.25em .5em;font-size:85%;color:#bf616a;background-color:#f9f9f9;border-radius:3px}pre{display:block;margin-top:0;margin-bottom:1rem;padding:1rem;font-size:.8rem;line-height:1.4;white-space:pre;white-space:pre-wrap;word-break:break-all;word-wrap:break-word;background-color:#f9f9f9}pre code{padding:0;font-size:100%;color:inherit}.highlight{margin-bottom:1rem;border-radius:4px}.highlight pre{margin-bottom:0}.gist .gist-file{font-family:Menlo, Monaco, "Courier New", monospace !important}.gist .markdown-body{padding:15px}.gist pre{padding:0;background-color:transparent}.gist .gist-file .gist-data{font-size:.8rem !important;line-height:1.4}.gist code{padding:0;color:inherit;background-color:transparent;border-radius:0}blockquote{padding:.5rem 1rem;margin:.8rem 0;color:#7a7a7a;border-left:.25rem solid #e5e5e5}blockquote p:last-child{margin-bottom:0}@media (min-width: 30em){blockquote{padding-right:5rem;padding-left:1.25rem}}img{display:block;max-width:100%;margin:0 0 1rem;border-radius:5px}table{margin-bottom:1rem;width:100%;border:1px solid #e5e5e5;border-collapse:collapse}td,th{padding:.25rem .5rem;border:1px solid #e5e5e5}tbody tr:nth-child(odd) td,tbody tr:nth-child(odd) th{background-color:#f9f9f9}.lead{font-size:1.25rem;font-weight:300}.message{margin-bottom:1rem;padding:1rem;color:#717171;background-color:#f9f9f9}.container{max-width:38rem;padding-left:1rem;padding-right:1rem;margin-left:auto;margin-right:auto}.masthead{padding-top:1rem;padding-bottom:1rem;margin-bottom:3rem}.masthead-title{margin-top:0;margin-bottom:0;color:#505050}.masthead-title a{color:#505050}.masthead-title small{font-size:75%;font-weight:400;color:#c0c0c0;letter-spacing:0}.page,.post{margin-bottom:4em}.page-title,.post-title,.post-title a{color:#303030}.page-title,.post-title{margin-top:0}.post-date{display:block;margin-top:-.5rem;margin-bottom:1rem;color:#9a9a9a}.related{padding-top:2rem;padding-bottom:2rem;border-top:1px solid #eee}.related-posts{padding-left:0;list-style:none}.related-posts h3{margin-top:0}.related-posts li small{font-size:75%;color:#999}.related-posts li a:hover{color:#268bd2;text-decoration:none}.related-posts li a:hover small{color:inherit}.pagination{overflow:hidden;margin-left:-1rem;margin-right:-1rem;font-family:"PT Sans", Helvetica, Arial, sans-serif;color:#ccc;text-align:center}.pagination-item{display:block;padding:1rem;border:1px solid #eee}.pagination-item:first-child{margin-bottom:-1px}a.pagination-item:hover{background-color:#f5f5f5}@media (min-width: 30em){.pagination{margin:3rem 0}.pagination-item{float:left;width:50%}.pagination-item:first-child{margin-bottom:0;border-top-left-radius:4px;border-bottom-left-radius:4px}.pagination-item:last-child{margin-left:-1px;border-top-right-radius:4px;border-bottom-right-radius:4px}}html,body{overflow-x:hidden}html{font-family:"PT Serif", Georgia, "Times New Roman", serif}h1,h2,h3,h4,h5,h6{font-family:"PT Sans", Helvetica, Arial, sans-serif;font-weight:400;color:#313131;letter-spacing:-.025rem}.wrap{position:relative;width:100%}.container{max-width:28rem}@media (min-width: 38em){.container{max-width:32rem}}@media (min-width: 56em){.container{max-width:38rem}}.masthead{padding-top:1rem;padding-bottom:1rem;margin-bottom:3rem;border-bottom:1px solid #eee}.masthead-title{margin-top:0;margin-bottom:0;color:#505050}.masthead-title a{color:#505050}.masthead-title small{font-size:75%;font-weight:400;color:#c0c0c0;letter-spacing:0}@media (max-width: 48em){.masthead-title{text-align:center}.masthead-title small{display:none}}.sidebar{position:fixed;top:0;bottom:0;left:-14rem;width:14rem;visibility:hidden;overflow-y:auto;font-family:"PT Sans", Helvetica, Arial, sans-serif;font-size:.875rem;color:rgba(255,255,255,0.6);background-color:#202020;-webkit-transition:all .3s ease-in-out;transition:all .3s ease-in-out}@media (min-width: 30em){.sidebar{font-size:.75rem}}.sidebar a{font-weight:normal;color:#fff}.sidebar-item{padding:1rem}.sidebar-item p:last-child{margin-bottom:0}.sidebar-nav{border-bottom:1px solid rgba(255,255,255,0.1)}.sidebar-nav-item{display:block;padding:.5rem 1rem;border-top:1px solid rgba(255,255,255,0.1)}.sidebar-nav-item.active,a.sidebar-nav-item:hover,a.sidebar-nav-item:focus{text-decoration:none;background-color:rgba(255,255,255,0.1);border-color:transparent}@media (min-width: 48em){.sidebar-item{padding:1.5rem}.sidebar-nav-item{padding-left:1.5rem;padding-right:1.5rem}}.sidebar-checkbox{position:absolute;opacity:0;-webkit-user-select:none;-moz-user-select:none;user-select:none}.sidebar-toggle{position:absolute;top:.8rem;left:1rem;display:block;padding:.25rem .75rem;color:#505050;background-color:#fff;border-radius:.25rem;cursor:pointer}.sidebar-toggle:before{display:inline-block;width:1rem;height:.75rem;content:"";background-image:-webkit-linear-gradient(to bottom, #555, #555 20%, #fff 20%, #fff 40%, #555 40%, #555 60%, #fff 60%, #fff 80%, #555 80%, #555 100%);background-image:-moz-linear-gradient(to bottom, #555, #555 20%, #fff 20%, #fff 40%, #555 40%, #555 60%, #fff 60%, #fff 80%, #555 80%, #555 100%);background-image:-ms-linear-gradient(to bottom, #555, #555 20%, #fff 20%, #fff 40%, #555 40%, #555 60%, #fff 60%, #fff 80%, #555 80%, #555 100%);background-image:linear-gradient(to bottom, #555, #555 20%, #fff 20%, #fff 40%, #555 40%, #555 60%, #fff 60%, #fff 80%, #555 80%, #555 100%)}.sidebar-toggle:active,#sidebar-checkbox:focus ~ .sidebar-toggle,#sidebar-checkbox:checked ~ .sidebar-toggle{color:#fff;background-color:#555}.sidebar-toggle:active:before,#sidebar-checkbox:focus ~ .sidebar-toggle:before,#sidebar-checkbox:checked ~ .sidebar-toggle:before{background-image:-webkit-linear-gradient(to bottom, #fff, #fff 20%, #555 20%, #555 40%, #fff 40%, #fff 60%, #555 60%, #555 80%, #fff 80%, #fff 100%);background-image:-moz-linear-gradient(to bottom, #fff, #fff 20%, #555 20%, #555 40%, #fff 40%, #fff 60%, #555 60%, #555 80%, #fff 80%, #fff 100%);background-image:-ms-linear-gradient(to bottom, #fff, #fff 20%, #555 20%, #555 40%, #fff 40%, #fff 60%, #555 60%, #555 80%, #fff 80%, #fff 100%);background-image:linear-gradient(to bottom, #fff, #fff 20%, #555 20%, #555 40%, #fff 40%, #fff 60%, #555 60%, #555 80%, #fff 80%, #fff 100%)}@media (min-width: 30.1em){.sidebar-toggle{position:fixed}}@media print{.sidebar-toggle{display:none}}.wrap,.sidebar,.sidebar-toggle{-webkit-backface-visibility:hidden;-ms-backface-visibility:hidden;backface-visibility:hidden}.wrap,.sidebar-toggle{-webkit-transition:-webkit-transform .3s ease-in-out;transition:transform .3s ease-in-out}#sidebar-checkbox:checked+.sidebar{z-index:10;visibility:visible}#sidebar-checkbox:checked ~ .sidebar,#sidebar-checkbox:checked ~ .wrap,#sidebar-checkbox:checked ~ .sidebar-toggle{-webkit-transform:translateX(14rem);-ms-transform:translateX(14rem);transform:translateX(14rem)}.page,.post{margin-bottom:4em}.page-title,.post-title,.post-title a{color:#303030}.page-title,.post-title{margin-top:0}.post-date{display:block;margin-top:-.5rem;margin-bottom:1rem;color:#9a9a9a}.related{padding-top:2rem;padding-bottom:2rem;border-top:1px solid #eee}.related-posts{padding-left:0;list-style:none}.related-posts h3{margin-top:0}.related-posts li small{font-size:75%;color:#999}.related-posts li a:hover{color:#268bd2;text-decoration:none}.related-posts li a:hover small{color:inherit}.pagination{overflow:hidden;margin-left:-1rem;margin-right:-1rem;font-family:"PT Sans", Helvetica, Arial, sans-serif;color:#ccc;text-align:center}.pagination-item{display:block;padding:1rem;border:1px solid #eee}.pagination-item:first-child{margin-bottom:-1px}a.pagination-item:hover{background-color:#f5f5f5}@media (min-width: 30em){.pagination{margin:3rem 0}.pagination-item{float:left;width:50%}.pagination-item:first-child{margin-bottom:0;border-top-left-radius:4px;border-bottom-left-radius:4px}.pagination-item:last-child{margin-left:-1px;border-top-right-radius:4px;border-bottom-right-radius:4px}}.layout-reverse .sidebar{left:auto;right:-14rem}.layout-reverse .sidebar-toggle{left:auto;right:1rem}.layout-reverse #sidebar-checkbox:checked ~ .sidebar,.layout-reverse #sidebar-checkbox:checked ~ .wrap,.layout-reverse #sidebar-checkbox:checked ~ .sidebar-toggle{-webkit-transform:translateX(-14rem);-ms-transform:translateX(-14rem);transform:translateX(-14rem)}.theme-base-08 .sidebar,.theme-base-08 .sidebar-toggle:active,.theme-base-08 #sidebar-checkbox:checked ~ .sidebar-toggle{background-color:#ac4142}.theme-base-08 .container a,.theme-base-08 .sidebar-toggle,.theme-base-08 .related-posts li a:hover{color:#ac4142}.theme-base-09 .sidebar,.theme-base-09 .sidebar-toggle:active,.theme-base-09 #sidebar-checkbox:checked ~ .sidebar-toggle{background-color:#d28445}.theme-base-09 .container a,.theme-base-09 .sidebar-toggle,.theme-base-09 .related-posts li a:hover{color:#d28445}.theme-base-0a .sidebar,.theme-base-0a .sidebar-toggle:active,.theme-base-0a #sidebar-checkbox:checked ~ .sidebar-toggle{background-color:#f4bf75}.theme-base-0a .container a,.theme-base-0a .sidebar-toggle,.theme-base-0a .related-posts li a:hover{color:#f4bf75}.theme-base-0b .sidebar,.theme-base-0b .sidebar-toggle:active,.theme-base-0b #sidebar-checkbox:checked ~ .sidebar-toggle{background-color:#90a959}.theme-base-0b .container a,.theme-base-0b .sidebar-toggle,.theme-base-0b .related-posts li a:hover{color:#90a959}.theme-base-0c .sidebar,.theme-base-0c .sidebar-toggle:active,.theme-base-0c #sidebar-checkbox:checked ~ .sidebar-toggle{background-color:#75b5aa}.theme-base-0c .container a,.theme-base-0c .sidebar-toggle,.theme-base-0c .related-posts li a:hover{color:#75b5aa}.theme-base-0d .sidebar,.theme-base-0d .sidebar-toggle:active,.theme-base-0d #sidebar-checkbox:checked ~ .sidebar-toggle{background-color:#6a9fb5}.theme-base-0d .container a,.theme-base-0d .sidebar-toggle,.theme-base-0d .related-posts li a:hover{color:#6a9fb5}.theme-base-0e .sidebar,.theme-base-0e .sidebar-toggle:active,.theme-base-0e #sidebar-checkbox:checked ~ .sidebar-toggle{background-color:#aa759f}.theme-base-0e .container a,.theme-base-0e .sidebar-toggle,.theme-base-0e .related-posts li a:hover{color:#aa759f}.theme-base-0f .sidebar,.theme-base-0f .sidebar-toggle:active,.theme-base-0f #sidebar-checkbox:checked ~ .sidebar-toggle{background-color:#8f5536}.theme-base-0f .container a,.theme-base-0f .sidebar-toggle,.theme-base-0f .related-posts li a:hover{color:#8f5536}.sidebar-overlay #sidebar-checkbox:checked ~ .wrap{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}.sidebar-overlay #sidebar-checkbox:checked ~ .sidebar-toggle{box-shadow:0 0 0 .25rem #fff}.sidebar-overlay #sidebar-checkbox:checked ~ .sidebar{box-shadow:0.25rem 0 0.5rem rgba(0,0,0,0.1)}.layout-reverse.sidebar-overlay #sidebar-checkbox:checked ~ .sidebar{box-shadow:-0.25rem 0 0.5rem rgba(0,0,0,0.1)}.highlight .hll{background-color:#ffc}.highlight .c{color:#999}.highlight .err{color:#a00;background-color:#faa}.highlight .k{color:#069}.highlight .o{color:#555}.highlight .cm{color:#09f;font-style:italic}.highlight .cp{color:#099}.highlight .c1{color:#999}.highlight .cs{color:#999}.highlight .gd{background-color:#fcc;border:1px solid #c00}.highlight .ge{font-style:italic}.highlight .gr{color:#f00}.highlight .gh{color:#030}.highlight .gi{background-color:#cfc;border:1px solid #0c0}.highlight .go{color:#aaa}.highlight .gp{color:#009}.highlight .gu{color:#030}.highlight .gt{color:#9c6}.highlight .kc{color:#069}.highlight .kd{color:#069}.highlight .kn{color:#069}.highlight .kp{color:#069}.highlight .kr{color:#069}.highlight .kt{color:#078}.highlight .m{color:#f60}.highlight .s{color:#d44950}.highlight .na{color:#4f9fcf}.highlight .nb{color:#366}.highlight .nc{color:#0a8}.highlight .no{color:#360}.highlight .nd{color:#99f}.highlight .ni{color:#999}.highlight .ne{color:#c00}.highlight .nf{color:#c0f}.highlight .nl{color:#99f}.highlight .nn{color:#0cf}.highlight .nt{color:#2f6f9f}.highlight .nv{color:#033}.highlight .ow{color:#000}.highlight .w{color:#bbb}.highlight .mf{color:#f60}.highlight .mh{color:#f60}.highlight .mi{color:#f60}.highlight .mo{color:#f60}.highlight .sb{color:#c30}.highlight .sc{color:#c30}.highlight .sd{color:#c30;font-style:italic}.highlight .s2{color:#c30}.highlight .se{color:#c30}.highlight .sh{color:#c30}.highlight .si{color:#a00}.highlight .sx{color:#c30}.highlight .sr{color:#3aa}.highlight .s1{color:#c30}.highlight .ss{color:#fc3}.highlight .bp{color:#366}.highlight .vc{color:#033}.highlight .vg{color:#033}.highlight .vi{color:#033}.highlight .il{color:#f60}.css .o,.css .o+.nt,.css .nt+.nt{color:#999}html,body{font-family:"Lato", Helvetica, Arial, sans-serif;font-size:17px;font-weight:300;line-height:1.5;color:#34495e}h1,h2,h3,h4,h5,h6{font-family:"Lato", Helvetica, Arial, sans-serif;font-weight:600;color:#34495e;letter-spacing:-.5px;margin-top:0.625rem;margin-bottom:0.625rem}h2,h3{margin-top:2.875rem;margin-bottom:0.6875rem}@media (min-width: 38em){html,body{font-size:16px}}p{text-align:justify;margin-bottom:1.375rem}.container{max-width:50rem;min-width:18rem;margin-left:auto;margin-right:auto}@media (min-width: 1400px){.embedded_wrapper.container{margin-left:30%}}.container.embedded{margin-top:2rem;margin-right:0;margin-left:0;padding-left:0.25rem;padding-right:0.25rem;max-width:100%}@media (min-width: 768px){.container.embedded{max-width:50rem;margin:auto auto}}img{display:block;max-width:100%;margin:0 0;border-radius:0px}.masthead .masthead-title a{text-decoration:none}.sidebar-toggle{z-index:1000;opacity:0.75}.sidebar{font-family:"Lato", Helvetica, Arial, sans-serif;font-size:1rem;left:-18rem;width:18rem}.sidebar .sidebar-item{font-size:0.90rem}.sidebar a.sidebar-nav-item{font-weight:lighter;color:#ecf0f1}@media (min-width: 30em){.sidebar{font-size:1.5rem}}#sidebar-checkbox:checked ~ .sidebar,#sidebar-checkbox:checked ~ .wrap,#sidebar-checkbox:checked ~ .sidebar-toggle{-webkit-transform:translateX(18rem);-ms-transform:translateX(18rem);transform:translateX(18rem)}.page-title,.post-title,.post-title a{color:#2c3e50}.page-title,.post-title{margin-top:0}table{margin-bottom:3rem}blockquote{font-size:16px}@media (min-width: 30em){font-size:16px}.theme-base-01 .sidebar,.theme-base-01 .sidebar-toggle:active,.theme-base-01 #sidebar-checkbox:checked ~ .sidebar-toggle{background-color:#34495e}.theme-base-01 .container a,.theme-base-01 .sidebar-toggle,.theme-base-01 .related-posts li a:hover{text-decoration:underline;color:#34495e}.theme-base-01 .container .masthead-title a,.theme-base-01 .container .post-title a,.theme-base-01 .container .page-title a{text-decoration:none}.theme-base-01 .container .masthead-title a:hover,.theme-base-01 .container .post-title a:hover,.theme-base-01 .container .page-title a:hover{text-decoration:underline}.footer{position:absolute;bottom:0;left:0;right:0;padding:1rem;background-color:#efefef;text-align:center}a.btn.btn-block{font-weight:200;text-decoration:none;color:white;margin-top:1rem;margin-bottom:0.5rem}img{margin:auto auto}img.slim{max-width:100%}img.super-slim{max-width:80%}img.short{max-height:700px}img.shorter{max-height:600px}img.super-short{max-height:500px}img.super-duper-short{max-height:400px}img.left{margin-left:0}@media (min-width: 768px){img.slim{max-width:70%}img.super-slim{max-width:50%}}#ajax-spinner{position:fixed;z-index:999;height:7em;width:7em;overflow:show;margin:auto;top:0;left:0;bottom:0;right:0;display:none}.grid-element-parent{display:-webkit-box;display:-moz-box;display:-ms-flexbox;display:-webkit-flex;display:flex;-webkit-flex-wrap:wrap;flex-wrap:wrap;-webkit-flex-direction:row;flex-direction:row;-webkit-align-items:center;align-items:center;-webkit-justify-content:center;justify-content:center}.grid-element-parent .grid-element{margin:1em}.grid-element-parent .grid-element a{text-decoration:none}.grid-element-parent .grid-element .grid-element-card{text-align:center;padding:0.25em;width:17em;height:16.32em}.grid-element-parent .grid-element .grid-element-card .grid-element-panel{height:10.1em;color:#ecf0f1;overflow-y:hidden}.grid-element-parent .grid-element .grid-element-card .grid-element-panel .grid-element-text{text-align:center;margin-top:25%}.grid-element-parent .grid-element .grid-element-card .grid-element-panel img{margin:auto auto;height:10.1em}.grid-element-parent .grid-element .grid-element-card .grid-element-label{font-weight:bold;font-size:1.2em}.box-label{height:4em;background:white;border:1px solid #ecf0f1;padding:1em;margin-top:4px}.box-label.long{height:5.5em}.effect5{position:relative}.effect5:before,.effect5:after{z-index:-1;position:absolute;content:"";bottom:25px;left:10px;width:50%;top:50%;background:#777;-webkit-box-shadow:0 35px 20px #777;box-shadow:0 35px 20px #777;-webkit-transform:rotate(-8deg);-ms-transform:rotate(-8deg);transform:rotate(-8deg)}.effect5:after{-webkit-transform:rotate(8deg);-ms-transform:rotate(8deg);transform:rotate(8deg);right:10px;left:auto}.panelista{background-color:white;position:relative;margin-bottom:2rem;height:10rem;width:auto}.panelista .panelista-shade{position:absolute;background-image:url("/guide/media/overview.png");z-index:1;top:0;bottom:0;left:0;right:0;padding:1.5rem 1rem;overflow:hidden}.panelista .panelista-shade h1{font-size:1.6rem;font-weight:bold;color:#2c3e50}.panelista .panelista-shade p{font-size:1rem;font-weight:400;color:#2c3e50}@media (min-width: 768px){.panelista{height:16rem;margin-bottom:3rem}.panelista .panelista-shade{background-image:url("/guide/media/overview.png")}.panelista .panelista-shade .panelist-banner{position:absolute;z-index:-1;top:0;right:0;padding:1em}.panelista .panelista-shade h1{font-size:1.8rem;color:#2c3e50}.panelista .panelista-shade p{font-size:1.2rem;color:#2c3e50}}.archive.list-group .archive.list-group-item{margin-top:1.5em;position:relative;padding:0}.archive.list-group .archive.list-group-item .list-group-item-text{background:rgba(44,62,80,0.8);position:absolute;color:#ecf0f1;z-index:1;top:0;bottom:0;left:0;right:0;padding:1em;overflow:hidden}.archive.list-group .archive.list-group-item .list-group-item-text .list-group-item-title{color:#ecf0f1;font-size:1.25rem;font-weight:500;margin-bottom:0}.archive.list-group .archive.list-group-item .list-group-item-text p{font-size:0.9rem;line-height:1.5em;font-weight:lighter;margin-top:0;margin-bottom:0.25rem}.archive.list-group .archive.list-group-item .list-group-item-meta{position:absolute;z-index:1;top:0;right:0;padding:1em}@media (min-width: 768px){.archive.list-group .archive.list-group-item .list-group-item-text{padding:1.5em;width:40%}.archive.list-group .archive.list-group-item .list-group-item-text .list-group-item-title{font-size:1.25rem;margin-bottom:1.375rem}.archive.list-group .archive.list-group-item .list-group-item-text p{text-align:left;line-height:1.5rem;font-size:1rem;margin-top:1rem;margin-bottom:1.0rem}.archive.list-group .archive.list-group-item .list-group-item-meta{position:absolute;z-index:1;top:auto;right:auto;bottom:0;left:0;padding:1em}}.linkout ul.list-inline{margin-bottom:0}.figure-legend.well{font-size:0.95rem}ul.aside{padding:0.5em}ul.aside .aside-title{padding:1rem;font-weight:bold;font-size:1.1rem;background-color:rgba(90,49,13,0.4);color:#000000}li.aside{list-style:none;padding:0.5em;background-color:#ecf0f1}li.aside.terms{background-color:rgba(90,49,13,0.2)}@media (min-width: 768px){ul.aside{padding:2em}}.progress-tracker-wrapper .progress-tracker--vertical .progress-step:not(:last-child) .progress-text{padding-bottom:0.75rem}.progress-tracker-wrapper .progress-tracker{max-width:35rem;margin-left:5%}.progress-tracker-wrapper .progress-tracker a:link.progress-tracker-link,.progress-tracker-wrapper .progress-tracker a:hover.progress-tracker-link,.progress-tracker-wrapper .progress-tracker a:active.progress-tracker-link,.progress-tracker-wrapper .progress-tracker a:visited.progress-tracker-link{text-decoration:none}.progress-tracker-wrapper .progress-tracker .progress-marker{padding-bottom:0px}@media (min-width: 1200px){.progress-tracker-wrapper .progress-tracker{position:fixed;left:-2%;top:15%;max-width:25%}.progress-tracker-wrapper .progress-tracker .progress-subtitle,.progress-tracker-wrapper .progress-tracker .progress-shadow{visibility:hidden}}@media (min-width: 1400px){.progress-tracker-wrapper .progress-tracker{left:-2%}.progress-tracker-wrapper .progress-tracker .progress-subtitle,.progress-tracker-wrapper .progress-tracker .progress-shadow{visibility:visible}}.progress-tracker-wrapper .panel-heading,.progress-tracker-wrapper .panel-body{padding-left:0;padding-right:0;margin-bottom:1rem}.progress-tracker-wrapper .progress-text{padding-top:2px;padding-left:42px}.progress-tracker-wrapper .progress-text .progress-title{color:#6B6B6B}.progress-tracker-wrapper .progress-shadow{position:absolute;width:100%;top:-0.4rem;left:-0.4rem;height:85%}.progress-tracker-wrapper .active{border-radius:5px;background-color:rgba(41,128,185,0.15)}.progress-tracker-wrapper .active+.progress-title{color:#34495e}.progress-tracker-wrapper #progress-tracker-content{margin-bottom:2rem}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
