gsea_num_permutations <- 1000
gsea_min_gs_size <- 15
gsea_max_gs_size <- 200
### Execute GSEA
command <- paste("java -cp", gsea_jar_path,
"-Xmx1G xtools.gsea.GseaPreranked",
"-rpt_label", gsea_analysis_name,
"-out", gsea_out_dir,
"-gmx", gsea_gmt_path,
"-rnk", gsea_rank_list_path,
"-nperm", gsea_num_permutations,
"-set_min", gsea_min_gs_size,
"-set_max", gsea_max_gs_size,
"-collapse false",
"-scoring_scheme weighted",
"-permute gene_set",
"-num 100",
"-plot_top_x 20",
"-rnd_seed 12345",
"-zip_report false",
"-gui false",
">", paste("gsea_output_", gsea_rpt_label, ".txt"),
sep=" ")
system(command)
### Declare common user-defined settings
gsea_jar_path <- file.path("/Users/jeffreywong/bin/gsea-3.0.jar")
gsea_rpt_label <- "tep_BrCa_HD_analysis"
gsea_analysis_name <- "tep_BrCa_HD"
gsea_out_dir <- getwd()
gsea_gmt_path <- file.path(getwd(),
"Human_GOBP_AllPathways_no_GO_iea_August_01_2017_symbol.gmt")
gsea_rank_list_path <- rank_list_path
gsea_num_permutations <- 1000
gsea_min_gs_size <- 15
gsea_max_gs_size <- 200
### Execute GSEA
command <- paste("java -cp", gsea_jar_path,
"-Xmx1G xtools.gsea.GseaPreranked",
"-rpt_label", gsea_analysis_name,
"-out", gsea_out_dir,
"-gmx", gsea_gmt_path,
"-rnk", gsea_rank_list_path,
"-nperm", gsea_num_permutations,
"-set_min", gsea_min_gs_size,
"-set_max", gsea_max_gs_size,
"-collapse false",
"-scoring_scheme weighted",
"-permute gene_set",
"-num 100",
"-plot_top_x 20",
"-rnd_seed 12345",
"-zip_report false",
"-gui false",
">", paste("gsea_output_", gsea_rpt_label, ".txt", sep=""),
sep=" ")
system(command)
getwd()
gsea_rank_list_path
command <- paste("java -cp", gsea_jar_path,
"-Xmx1G xtools.gsea.GseaPreranked",
"-rpt_label", gsea_analysis_name,
"-out", gsea_out_dir,
"-gmx", gsea_gmt_path,
"-rnk", gsea_rank_list_path,
"-nperm", gsea_num_permutations,
"-set_min", gsea_min_gs_size,
"-set_max", gsea_max_gs_size,
"-collapse false",
"-scoring_scheme weighted",
"-permute gene_set",
"-num 100",
"-plot_top_x 20",
"-rnd_seed 12345",
"-zip_report false",
"-gui false",
">", paste("gsea_output_", gsea_rpt_label, ".txt", sep=""),
sep=" ")
command
gsea_rank_list_path
### Declare common user-defined settings
gsea_jar_path <- file.path("/Users/jeffreywong/bin/gsea-3.0.jar")
gsea_rpt_label <- "tep_BrCa_HD_analysis"
gsea_analysis_name <- "tep_BrCa_HD"
gsea_out_dir <- getwd()
gsea_gmt_path <- file.path(getwd(),
"Human_GOBP_AllPathways_no_GO_iea_August_01_2017_symbol.gmt")
gsea_rank_list_path <- rank_list_path
gsea_num_permutations <- 1000
gsea_min_gs_size <- 15
gsea_max_gs_size <- 200
### Execute GSEA
command <- paste("java -cp", gsea_jar_path,
"-Xmx1G xtools.gsea.GseaPreranked",
"-rpt_label", gsea_analysis_name,
"-out", gsea_out_dir,
"-gmx", "/Users/jeffreywong/Projects/PathwayCommons/web/guide_development/guide/src/collections/_workflows/Human_GOBP_AllPathways_no_GO_iea_August_01_2017_symbol.gmt",
"-rnk", "/Users/jeffreywong/Projects/PathwayCommons/web/guide_development/guide/src/collections/_workflows/brca_hd_tep.rnk",
"-nperm", gsea_num_permutations,
"-set_min", gsea_min_gs_size,
"-set_max", gsea_max_gs_size,
"-collapse false",
"-scoring_scheme weighted",
"-permute gene_set",
"-num 100",
"-plot_top_x 20",
"-rnd_seed 12345",
"-zip_report false",
"-gui false",
">", paste("gsea_output_", gsea_rpt_label, ".txt", sep=""),
sep=" ")
system(command)
getwd
getwd()
### Declare common user-defined settings
gsea_jar_path <- file.path("/Users/jeffreywong/bin/gsea-3.0.jar")
gsea_rpt_label <- "tep_BrCa_HD_analysis"
gsea_analysis_name <- "tep_BrCa_HD"
gsea_out_dir <- getwd()
gsea_gmt_path <- file.path(getwd(),
"Human_GOBP_AllPathways_no_GO_iea_August_01_2017_symbol.gmt")
gsea_rank_list_path <- rank_list_path
gsea_num_permutations <- 1000
gsea_min_gs_size <- 15
gsea_max_gs_size <- 200
### Execute GSEA
command <- paste("java -cp", gsea_jar_path,
"-Xmx1G xtools.gsea.GseaPreranked",
"-rpt_label", gsea_analysis_name,
"-out", gsea_out_dir,
"-gmx", "/Users/jeffreywong/Projects/PathwayCommons/web/guide_development/guide/src/collections/_workflows/rna\-seq\-to\-enrichment\-map\-r\-notebook/data/Human_GOBP_AllPathways_no_GO_iea_August_01_2017_symbol.gmt",
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE, cache = TRUE)
### Declare general file directory paths
base_dir <- getwd()
data_dir <- file.path(base_dir, "data")
### Declare paths to RNA-Seq (meta)data files
tep_rnaseq_metadata <- file.path(data_dir, "tep_rnaseq_metadata.txt")
tep_rnaseq_filelist <- c(file.path(data_dir, "MGH-BrCa-H-74_htsqct.txt"),
file.path(data_dir, "MGH-BrCa-H-68_htsqct.txt"),
file.path(data_dir, "MGH-BrCa-H-66_htsqct.txt"),
file.path(data_dir, "MGH-BrCa-H-59_htsqct.txt"),
file.path(data_dir, "MGH-BrCa-H-11_htsqct.txt"),
file.path(data_dir, "HD-5_htsqct.txt"),
file.path(data_dir, "HD-4_htsqct.txt"),
file.path(data_dir, "HD-3-1_htsqct.txt"),
file.path(data_dir, "HD-2-1_htsqct.txt"),
file.path(data_dir, "HD-1_htsqct.txt"))
tep_rnaseq_metadata_df <- read.table(tep_rnaseq_metadata,header = TRUE)
knitr::kable(tep_rnaseq_metadata_df)
index_HD_1_htsqct <- grepl("HD-1_htsqct.txt", tep_rnaseq_filelist)
rnaseq_HD_1_htsqct <- read.table(tep_rnaseq_filelist[index_HD_1_htsqct],
check.names=FALSE)
knitr::kable(head(rnaseq_HD_1_htsqct), col.names=c("",""))
library(devtools)
library("SummarizedExperiment")
devtools::install_github("jvwong/emRNASeq")
source_name <- "ensembl_gene_id"
target_name <- "hgnc_symbol"
species <- "human"
brca_hd_tep_se <- emRNASeq::merge_data(
tep_rnaseq_metadata,
species,
source_name,
target_name,
tep_rnaseq_filelist)
brca_hd_tep_se
knitr::kable(SummarizedExperiment::colData(brca_hd_tep_se))
brca_hd_tep_rowRanged_df <- as.data.frame(SummarizedExperiment::rowRanges(brca_hd_tep_se))
knitr::kable(head(brca_hd_tep_rowRanged_df))
dim(brca_hd_tep_rowRanged_df)
knitr::kable(head(SummarizedExperiment::assays(brca_hd_tep_se)[["counts"]])[, c(1,2,6,7)])
library(edgeR)
### Minimum number of mapped read counts per sample
min_counts <- 5
### Declare baseline (i.e. control) and test classes
baseline_class <- "HD"
test_class <- "BrCa"
comparison <- c(baseline_class, test_class)
brca_hd_tep_se_counts <- SummarizedExperiment::assays(brca_hd_tep_se)[["counts"]]
brca_hd_tep_se_group <- SummarizedExperiment::colData(brca_hd_tep_se)[["class"]]
### Find genes (rows) with a minimum number of counts
index_test_class <- brca_hd_tep_se_group == comparison[1]
index_baseline_class <- brca_hd_tep_se_group == comparison[2]
row_with_mincount <-
rowSums(edgeR::cpm(brca_hd_tep_se_counts) > min_counts) >=
min(sum(index_baseline_class), sum(index_test_class))
### Subset the original data accordingly
brca_hd_tep_dge_counts <- brca_hd_tep_se_counts[row_with_mincount,]
### Push the data into the edgeR::DGEList
brca_hd_tep_filtered_dge <-
edgeR::DGEList(counts = brca_hd_tep_dge_counts, group = brca_hd_tep_se_group)
knitr::kable(head(brca_hd_tep_filtered_dge[["counts"]])[, c(1,2,5,6)])
knitr::kable(brca_hd_tep_filtered_dge[["samples"]])
brca_hd_tep_tmm_normalized_dge <- emRNASeq::normalize_rseq(brca_hd_tep_filtered_dge)
knitr::kable(brca_hd_tep_tmm_normalized_dge[["samples"]])
### Combine two data frames - gene metadata and sample counts
brca_hd_tep_tmm_normalized_mat <- edgeR::cpm(brca_hd_tep_tmm_normalized_dge, normalized.lib.size=TRUE)
meta_df <- data.frame(
NAME = rownames(brca_hd_tep_tmm_normalized_mat),
DESCRIPTION = rownames(brca_hd_tep_tmm_normalized_mat),
check.names = FALSE)
rownames(brca_hd_tep_tmm_normalized_mat) <- NULL
brca_hd_tep_tmm_normalized_expression_df <- data.frame(meta_df, brca_hd_tep_tmm_normalized_mat,  check.names = FALSE)
### Write out
expression_dataset_path <- file.path(getwd(), "brca_hd_tep_tmm_normalized_expression.txt")
write.table(brca_hd_tep_tmm_normalized_expression_df,
quote=FALSE,
sep = "\t",
file=expression_dataset_path,
row.names = FALSE)
brca_hd_tep_tmm_normalized_expression_file_df <- read.table(expression_dataset_path,
header = TRUE,
check.names = FALSE)
knitr::kable(head(brca_hd_tep_tmm_normalized_expression_file_df)[,c(1:4,8,9)])
### Calculate variability (dispersions) in data
brca_hd_tep_fitted_commondisp_dge <- edgeR::estimateCommonDisp(brca_hd_tep_tmm_normalized_dge)
brca_hd_tep_fitted_tagwise_dge <- edgeR::estimateTagwiseDisp(brca_hd_tep_fitted_commondisp_dge)
### Perform differential expression testing (comparison is 'BrCa' vs 'HD')
brca_hd_tep_de_tested_dge <- edgeR::exactTest(brca_hd_tep_fitted_tagwise_dge, pair = comparison)
### Perform multiple-testing correction using Benjamini-Hockberg procedure
brca_hd_tep_de_tested_tt <- edgeR::topTags(brca_hd_tep_de_tested_dge,
n = nrow(brca_hd_tep_tmm_normalized_dge),
adjust.method = "BH",
sort.by = "PValue")
knitr::kable(head(brca_hd_tep_de_tested_tt[["table"]]))
### Rank by inverse of p-value taking into account 'sign' of change in BrCa (i.e. increase/decrease) relative to HD
brca_hd_tep_rank_values <- sign(brca_hd_tep_de_tested_tt[["table"]][["logFC"]]) * (-1) * log10(brca_hd_tep_de_tested_tt[["table"]][["PValue"]])
### Take into account log10(0) = -Inf
brca_hd_tep_rank_values_max <- max(brca_hd_tep_rank_values[ brca_hd_tep_rank_values != Inf ])
brca_hd_tep_rank_values_unique <- sapply( brca_hd_tep_rank_values,
function(x) replace(x, is.infinite(x),
sign(x) * (brca_hd_tep_rank_values_max + runif(1))) )
### Construct the data frame we wish place into a tabular file
genenames <- (rownames(brca_hd_tep_de_tested_tt[["table"]]))
brca_hd_tep_ranks_df <- data.frame(gene=genenames,
rank=brca_hd_tep_rank_values_unique,
stringsAsFactors = FALSE)
brca_hd_tep_ordered_ranks_df <- brca_hd_tep_ranks_df[order(brca_hd_tep_ranks_df[,2], decreasing = TRUE), ]
## Write out
rank_list_path <- file.path(getwd(), "brca_hd_tep.rnk")
write.table(brca_hd_tep_ordered_ranks_df,
quote=FALSE,
sep = "\t",
file=rank_list_path,
row.names = FALSE)
brca_hd_tep_ordered_ranks_file_df <- read.table(rank_list_path,
header = TRUE,
check.names = FALSE)
ranks_head <- head(brca_hd_tep_ordered_ranks_file_df, n=5)
rownames(ranks_head) <- NULL
knitr::kable(ranks_head)
ranks_tail <- tail(brca_hd_tep_ordered_ranks_file_df, n=5)
rownames(ranks_tail) <- NULL
knitr::kable(ranks_tail)
n_samples <- dim(brca_hd_tep_filtered_dge)[2]
n_classes <- 2
l1 <- paste(n_samples, n_classes, "1")
l2 <- paste("#", brca_hd_tep_de_tested_tt[["comparison"]][1], brca_hd_tep_de_tested_tt[["comparison"]][2])
l3 <- paste(brca_hd_tep_filtered_dge[["samples"]][["group"]], collapse = " ")
brca_hd_tep_cls <- rbind(l1, l2, l3)
### Write out
categorical_class_path <- file.path(getwd(), "brca_hd_tep.cls")
write(brca_hd_tep_cls,
file=categorical_class_path,
sep = "\t")
rownames(brca_hd_tep_cls) <- NULL
knitr::kable(brca_hd_tep_cls)
### Declare common user-defined settings
gsea_jar_path <- file.path("/Users/jeffreywong/bin/gsea-3.0.jar")
gsea_rpt_label <- "tep_BrCa_HD_analysis"
gsea_analysis_name <- "tep_BrCa_HD"
gsea_out_dir <- getwd()
gsea_gmt_path <- file.path(getwd(),
"Human_GOBP_AllPathways_no_GO_iea_August_01_2017_symbol.gmt")
gsea_rank_list_path <- rank_list_path
gsea_num_permutations <- 1000
gsea_min_gs_size <- 15
gsea_max_gs_size <- 200
### Execute GSEA
command <- paste("java -cp", gsea_jar_path,
"-Xmx1G xtools.gsea.GseaPreranked",
"-rpt_label", gsea_analysis_name,
"-out", gsea_out_dir,
"-gmx", gsea_gmt_path,
"-rnk", gsea_rank_list_path,
"-nperm", gsea_num_permutations,
"-set_min", gsea_min_gs_size,
"-set_max", gsea_max_gs_size,
"-collapse false",
"-scoring_scheme weighted",
"-permute gene_set",
"-num 100",
"-plot_top_x 20",
"-rnd_seed 12345",
"-zip_report false",
"-gui false",
">", paste("gsea_output_", gsea_rpt_label, ".txt", sep=""),
sep=" ")
system(command)
rownames(brca_hd_tep_cls) <- NULL
knitr::kable(brca_hd_tep_cls)
rownames(brca_hd_tep_cls) <- NULL
brca_hd_tep_cls
### Declare common user-defined settings
gsea_jar_path <- file.path("/Users/jeffreywong/bin/gsea-3.0.jar")
gsea_rpt_label <- "tep_BrCa_HD_analysis"
gsea_analysis_name <- "tep_BrCa_HD"
gsea_out_dir <- getwd()
gsea_gmt_path <- file.path(getwd(),
"data",
"Human_GOBP_AllPathways_no_GO_iea_August_01_2017_symbol.gmt")
gsea_rank_list_path <- rank_list_path
gsea_num_permutations <- 1000
gsea_min_gs_size <- 15
gsea_max_gs_size <- 200
### Execute GSEA
command <- paste("java -cp", gsea_jar_path,
"-Xmx1G xtools.gsea.GseaPreranked",
"-rpt_label", gsea_analysis_name,
"-out", gsea_out_dir,
"-gmx", gsea_gmt_path,
"-rnk", gsea_rank_list_path,
"-nperm", gsea_num_permutations,
"-set_min", gsea_min_gs_size,
"-set_max", gsea_max_gs_size,
"-collapse false",
"-scoring_scheme weighted",
"-permute gene_set",
"-num 100",
"-plot_top_x 20",
"-rnd_seed 12345",
"-zip_report false",
"-gui false",
">", paste("gsea_output_", gsea_rpt_label, ".txt", sep=""),
sep=" ")
system(command)
gsea_out_dir <- file.path(getwd(), "gsea_output")
### Declare common user-defined settings
gsea_jar_path <- file.path("/Users/jeffreywong/bin/gsea-3.0.jar")
gsea_rpt_label <- "tep_BrCa_HD_analysis"
gsea_analysis_name <- "tep_BrCa_HD"
gsea_out_dir <- file.path(getwd(), "gsea_output")
gsea_gmt_path <- file.path(getwd(),
"data",
"Human_GOBP_AllPathways_no_GO_iea_August_01_2017_symbol.gmt")
gsea_rank_list_path <- rank_list_path
gsea_num_permutations <- 1000
gsea_min_gs_size <- 15
gsea_max_gs_size <- 200
### Execute GSEA
command <- paste("java -cp", gsea_jar_path,
"-Xmx1G xtools.gsea.GseaPreranked",
"-rpt_label", gsea_analysis_name,
"-out", gsea_out_dir,
"-gmx", gsea_gmt_path,
"-rnk", gsea_rank_list_path,
"-nperm", gsea_num_permutations,
"-set_min", gsea_min_gs_size,
"-set_max", gsea_max_gs_size,
"-collapse false",
"-scoring_scheme weighted",
"-permute gene_set",
"-num 100",
"-plot_top_x 20",
"-rnd_seed 12345",
"-zip_report false",
"-gui false",
">", paste("gsea_output_", gsea_rpt_label, ".txt", sep=""),
sep=" ")
system(command)
### Declare common user-defined settings
gsea_jar_path <- file.path("/Users/jeffreywong/bin/gsea-3.0.jar")
gsea_rpt_label <- "tep_BrCa_HD_analysis"
gsea_analysis_name <- "tep_BrCa_HD"
gsea_out <- file.path(getwd(), "gsea_output")
gsea_gmx <- file.path(getwd(),
"data",
"Human_GOBP_AllPathways_no_GO_iea_August_01_2017_symbol.gmt")
gsea_rank_list_path <- rank_list_path
gsea_num_permutations <- 1000
gsea_min_gs_size <- 15
gsea_max_gs_size <- 200
### Execute GSEA
command <- paste("java -cp", gsea_jar_path,
"-Xmx1G xtools.gsea.GseaPreranked",
"-rpt_label", gsea_analysis_name,
"-out", gsea_out,
"-gmx", gsea_gmx,
"-rnk", gsea_rank_list_path,
"-nperm", gsea_num_permutations,
"-set_min", gsea_min_gs_size,
"-set_max", gsea_max_gs_size,
"-collapse false",
"-scoring_scheme weighted",
"-permute gene_set",
"-num 100",
"-plot_top_x 20",
"-rnd_seed 12345",
"-zip_report false",
"-gui false",
">", paste("gsea_output_", gsea_rpt_label, ".txt", sep=""),
sep=" ")
system(command)
devtools::install_github("cytoscape/r2cytoscape")
devtools::install_github("cytoscape/cytoscape-automation")
devtools::install_github("cytoscape/cytoscape-automation/for-scripters/R/r2cytoscape")
em_pvalue_gsea_threshold <- "0.01"
em_qvalue_gsea_threshold <- "0.01"
em_similarity_threshold <- "0.375"
em_similarity_metric = "COMBINED"
gsea_results <- file.path(gsea_out, "tep_BrCa_HD.GseaPreranked.1504286739887")
gsea_results_path <- file.path(gsea_results,"edb")
gsea_results_path
gsea_results_filename <- file.path(gsea_results_path, "results.edb")
gsea_results_filename
?commandRun
??commandRun
### Define thresholds for GSEA enrichments
em_pvalue_gsea_threshold <- "0.01"
em_qvalue_gsea_threshold <- "0.01"
### Define thresholds for gene set similarity
em_similarity_threshold <- "0.375"
em_similarity_metric = "COMBINED"
### GSEA results - 'edb' folder
gsea_results <- file.path(gsea_out, "tep_BrCa_HD.GseaPreranked.1504286739887")
gsea_results_path <- file.path(gsea_results, "edb", "results.edb")
#######################################
#create EM pvalue < 0.01 and qvalue < 0.01
#######################################
em_command = paste("enrichmentmap build analysisType=gsea",
"gmtFile=", gsea_gmx,
"pvalue=", em_pvalue_gsea_threshold,
"qvalue=", em_qvalue_gsea_threshold,
"similaritycutoff=", em_similarity_threshold,
"coeffecients=", em_similarity_metric,
"ranksDataset1=", gsea_rank_list_path,
"enrichmentsDataset1=", gsea_results_filename,
"expressionDataset1=", expression_dataset_path,
sep=" ")
#enrichment map command will return the suid of newly created network.
response <- r2cytoscape::commandRun(em_command)
### Define thresholds for GSEA enrichments
em_pvalue_gsea_threshold <- "0.01"
em_qvalue_gsea_threshold <- "0.01"
### Define thresholds for gene set similarity
em_similarity_threshold <- "0.375"
em_similarity_metric = "COMBINED"
### GSEA results - 'edb' folder
gsea_results <- file.path(gsea_out, "tep_BrCa_HD.GseaPreranked.1504286739887")
gsea_results_path <- file.path(gsea_results, "edb", "results.edb")
#######################################
#create EM pvalue < 0.01 and qvalue < 0.01
#######################################
em_command = paste("enrichmentmap build analysisType=gsea",
"gmtFile=", gsea_gmx,
"pvalue=", em_pvalue_gsea_threshold,
"qvalue=", em_qvalue_gsea_threshold,
"similaritycutoff=", em_similarity_threshold,
"coeffecients=", em_similarity_metric,
"ranksDataset1=", gsea_rank_list_path,
"enrichmentsDataset1=", gsea_results_filename,
"expressionDataset1=", expression_dataset_path,
sep=" ")
#enrichment map command will return the suid of newly created network.
response <- r2cytoscape::commandRun(em_command)
### Define thresholds for GSEA enrichments
em_pvalue_gsea_threshold <- "0.01"
em_qvalue_gsea_threshold <- "0.01"
### Define thresholds for gene set similarity
em_similarity_threshold <- "0.375"
em_similarity_metric = "COMBINED"
### GSEA results - 'edb' folder
gsea_results <- file.path(gsea_out, "tep_BrCa_HD.GseaPreranked.1504286739887")
gsea_results_path <- file.path(gsea_results, "edb", "results.edb")
#######################################
#create EM pvalue < 0.01 and qvalue < 0.01
#######################################
em_command = paste("enrichmentmap build analysisType=gsea",
"gmtFile=", gsea_gmx,
"pvalue=", em_pvalue_gsea_threshold,
"qvalue=", em_qvalue_gsea_threshold,
"similaritycutoff=", em_similarity_threshold,
"coeffecients=", em_similarity_metric,
"ranksDataset1=", gsea_rank_list_path,
"enrichmentsDataset1=", gsea_results_filename,
"expressionDataset1=", expression_dataset_path,
sep=" ")
#enrichment map command will return the suid of newly created network.
response <- r2cytoscape::commandRun(em_command)
### Define thresholds for GSEA enrichments
em_pvalue_gsea_threshold <- "0.01"
em_qvalue_gsea_threshold <- "0.01"
### Define thresholds for gene set similarity
em_similarity_threshold <- "0.375"
em_similarity_metric = "COMBINED"
### GSEA results - 'edb' folder
gsea_results <- file.path(gsea_out, "tep_BrCa_HD.GseaPreranked.1504286739887")
gsea_results_path <- file.path(gsea_results, "edb", "results.edb")
#######################################
#create EM pvalue < 0.01 and qvalue < 0.01
#######################################
em_command = paste("enrichmentmap build analysisType=gsea",
"gmtFile=", gsea_gmx,
"pvalue=", em_pvalue_gsea_threshold,
"qvalue=", em_qvalue_gsea_threshold,
"similaritycutoff=", em_similarity_threshold,
"coeffecients=", em_similarity_metric,
"ranksDataset1=", gsea_rank_list_path,
"enrichmentsDataset1=", gsea_results_filename,
"expressionDataset1=", expression_dataset_path,
sep=" ")
#enrichment map command will return the suid of newly created network.
response <- r2cytoscape::commandRun(em_command)
